blockchain:
	app:
		configuration:
			announcements:
			+ blockchain.session.configuration.value
			apple:
				pay:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			debug:
				observers:
				+ blockchain.db.type.array.of.tags
				+ blockchain.session.configuration.value
			deep_link:
				rules:
				+ blockchain.session.configuration.value
			frequent:
				action:
				+ blockchain.db.type.any
				+ blockchain.session.configuration.value
			redesign:
				coinview:
				+ blockchain.db.type.boolean
				+ blockchain.session.configuration.value
			remote:
				is:
					stale:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.preference.value
					+ blockchain.session.state.shared.value
			tabs:
			+ blockchain.db.type.array.of.tags
			+ blockchain.session.configuration.value
			test:
				shared:
					preference:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.preference.value
					+ blockchain.session.state.shared.value
		deep_link:
			activity:
				transaction:
					id:
					+ blockchain.db.type.string
			asset:
				code:
				+ blockchain.db.type.string
			buy:
				amount:
				+ blockchain.db.type.integer
				crypto:
					code:
					+ blockchain.db.type.string
			kyc:
				tier:
				+ blockchain.db.type.integer
			qr:
			send:
				amount:
				+ blockchain.db.type.integer
				crypto:
					code:
					+ blockchain.db.type.string
				destination:
				+ blockchain.db.type.string
		enter:
			into:
			+ blockchain.ux.type.story
		is:
			ready:
				for:
					deep_link:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
		process:
			deep_link:
				error:
				+ blockchain.ux.type.analytics.error
				url:
				+ blockchain.db.type.url
				+ blockchain.session.state.value
	db:
		array:
		collection:
			id:
			+ blockchain.db.type.string
		field:
		leaf:
		type:
			any:
			+ blockchain.db.leaf
			array:
				of:
					booleans:
					+ blockchain.db.array
					dates:
					+ blockchain.db.array
					integers:
					+ blockchain.db.array
					maps:
					+ blockchain.db.array
					numbers:
					+ blockchain.db.array
					strings:
					+ blockchain.db.array
					tags:
					+ blockchain.db.array
					urls:
					+ blockchain.db.array
			bigint:
			+ blockchain.db.leaf
			boolean:
			+ blockchain.db.leaf
			date:
			+ blockchain.db.leaf
			enum:
			+ blockchain.db.leaf
			integer:
			+ blockchain.db.leaf
			number:
			+ blockchain.db.leaf
			string:
			+ blockchain.db.leaf
			tag:
			+ blockchain.db.leaf
				none:
			url:
			+ blockchain.db.leaf
	namespace:
		language:
			error:
			+ blockchain.ux.type.analytics.error
	session:
		configuration:
			value:
		event:
			did:
				sign:
					in:
					+ blockchain.ux.type.analytics.state
					out:
					+ blockchain.ux.type.analytics.state
			will:
				sign:
					in:
					+ blockchain.ux.type.analytics.state
					out:
					+ blockchain.ux.type.analytics.state
		state:
			key:
				value:
					pair:
						key:
						+ blockchain.type.key
						value:
						+ blockchain.db.type.any
			preference:
				value:
				+ blockchain.session.state.value
			shared:
				value:
				+ blockchain.session.state.value
			stored:
				value:
				+ blockchain.session.state.value
			value:
	type:
		currency:
			code:
			+ blockchain.db.type.string
		key:
			context:
			+ blockchain.db.type.array.of.maps
				key:
				+ blockchain.db.type.tag
				value:
				+ blockchain.db.type.string
			tag:
			+ blockchain.db.type.tag
		money:
			amount:
			+ blockchain.db.type.bigint
			currency:
			+ blockchain.type.currency
			display:
				code:
				+ blockchain.db.type.string
				string:
					major:
					+ blockchain.db.type.string
					minor:
					+ blockchain.db.type.string
				symbol:
				+ blockchain.db.type.string
			precision:
			+ blockchain.db.type.integer
	ui:
		type:
			action:
			+ blockchain.ux.type.analytics.action
				policy:
					discard:
						if:
						+ blockchain.db.type.boolean
						when:
						+ blockchain.db.type.boolean
					perform:
						if:
						+ blockchain.db.type.boolean
						when:
						+ blockchain.db.type.boolean
				then:
					close:
					enter:
						into:
						+ blockchain.db.type.tag
					navigate:
						to:
						+ blockchain.db.type.tag
					pop:
						to:
							root:
					replace:
						current:
							stack:
							+ blockchain.db.type.array.of.tags
						root:
							stack:
							+ blockchain.db.type.array.of.tags
					set:
						session:
							state:
							+ blockchain.db.type.array.of.maps
							+ blockchain.session.state.key.value.pair
			control:
			+ sky.db.field
			+ sky.ui.type.element
				analytics:
					context:
					+ blockchain.type.key.context
				event:
					select:
					+ blockchain.ui.type.action
					swipe:
						any:
						+ blockchain.ui.type.action
						down:
						+ blockchain.ui.type.action
						horizontal:
						+ blockchain.ui.type.action
						left:
						+ blockchain.ui.type.action
						right:
						+ blockchain.ui.type.action
						up:
						+ blockchain.ui.type.action
						vertical:
						+ blockchain.ui.type.action
					tap:
					= select
					value:
						change:
						+ blockchain.ui.type.action
						decremented:
						+ blockchain.ui.type.action
						incremented:
						+ blockchain.ui.type.action
						initialise:
						+ blockchain.ui.type.action
			state:
			+ blockchain.ux.type.analytics.state
	user:
	+ blockchain.db.collection
		account:
			tier:
			+ blockchain.db.type.enum
				gold:
				none:
				platinum:
				silver:
		address:
			city:
			+ blockchain.db.type.string
			country:
				code:
				+ blockchain.db.type.string
			line_1:
			+ blockchain.db.type.string
			line_2:
			+ blockchain.db.type.string
			postal:
				code:
				+ blockchain.db.type.string
			state:
			+ blockchain.db.type.string
		email:
			address:
			+ blockchain.db.type.string
			is:
				verified:
				+ blockchain.db.type.boolean
		is:
			tier:
				gold:
				+ blockchain.db.type.boolean
				none:
				silver:
				+ blockchain.db.type.boolean
		name:
			first:
			+ blockchain.db.type.string
			last:
			+ blockchain.db.type.string
		token:
			firebase:
				installation:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
		wallet:
		+ blockchain.db.collection
			is:
				funded:
	ux:
		asset:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
			account:
			+ blockchain.db.collection
			+ blockchain.ux.type.story
				activity:
				+ blockchain.ux.type.action
				buy:
				+ blockchain.ux.type.action
				error:
				+ blockchain.ux.type.analytics.error
				exchange:
					connect:
					+ blockchain.ux.type.action
					deposit:
					+ blockchain.ux.type.action
					withdraw:
					+ blockchain.ux.type.action
				explainer:
				+ blockchain.ux.type.story
					accept:
					reset:
				receive:
				+ blockchain.ux.type.action
				require:
					KYC:
					+ blockchain.ui.type.action
				rewards:
					deposit:
					+ blockchain.ux.type.action
					summary:
					+ blockchain.ux.type.action
					withdraw:
					+ blockchain.ux.type.action
				sell:
				+ blockchain.ux.type.action
				send:
				+ blockchain.ux.type.action
				sheet:
				+ blockchain.ux.type.action
				swap:
				+ blockchain.ux.type.action
				type:
				+ blockchain.db.type.string
			bio:
				visit:
					website:
						url:
						+ blockchain.db.type.url
			buy:
			+ blockchain.ux.type.action
			chart:
				deselected:
				+ blockchain.ux.type.analytics.action
				interval:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
				selected:
				+ blockchain.ux.type.analytics.action
			error:
			+ blockchain.ux.type.analytics.error
			receive:
			+ blockchain.ux.type.action
			recurring:
				buy:
					summary:
					+ blockchain.db.collection
					+ blockchain.ux.type.story
						cancel:
				buys:
					notification:
			select:
			+ blockchain.ux.type.action
			sell:
			+ blockchain.ux.type.action
			send:
			+ blockchain.ux.type.action
			watchlist:
				add:
				+ blockchain.ux.type.analytics.event
				is:
					on:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
				remove:
				+ blockchain.ux.type.analytics.event
		buy_and_sell:
		+ blockchain.ux.type.story
			buy:
			+ blockchain.ux.type.story
			sell:
			+ blockchain.ux.type.story
		frequent:
			action:
			+ blockchain.ux.type.story
				buy:
				+ blockchain.ux.type.story
				deposit:
				+ blockchain.ux.type.story
				receive:
				+ blockchain.ux.type.story
				rewards:
				+ blockchain.ux.type.story
				sell:
				+ blockchain.ux.type.story
				send:
				+ blockchain.ux.type.story
				swap:
				+ blockchain.ux.type.story
				withdraw:
				+ blockchain.ux.type.story
		home:
			tab:
			+ blockchain.db.collection
				select:
				+ blockchain.ux.type.action
		maintenance:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
		payment:
			method:
				open:
					banking:
						account:
						+ blockchain.session.state.value
						authorisation:
							url:
							+ blockchain.db.type.url
							+ blockchain.session.state.value
						callback:
							base:
								url:
								+ blockchain.db.type.url
								+ blockchain.session.state.value
							path:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						consent:
							error:
							+ blockchain.session.state.value
							+ blockchain.ux.type.analytics.error
							token:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						currency:
						+ blockchain.db.type.string
						+ blockchain.session.state.value
						error:
							code:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						is:
							authorised:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
		prices:
		+ blockchain.ux.type.story
		scan:
			QR:
			+ blockchain.ux.type.story
		transaction:
			crypto:
				currency:
				+ blockchain.db.collection
					buy:
					+ blockchain.ux.transaction.type
					+ blockchain.ux.type.story
						with:
							fiat:
							+ blockchain.session.state.value
							+ blockchain.type.money
					receive:
					+ blockchain.ux.transaction.type
					+ blockchain.ux.type.story
					sell:
					+ blockchain.ux.transaction.type
					+ blockchain.ux.type.story
					swap:
					+ blockchain.db.collection
					+ blockchain.ux.transaction.type
					+ blockchain.ux.type.story
			event:
				completed:
				+ blockchain.ux.type.analytics.event
				failed:
					abandoned:
					+ blockchain.ux.type.analytics.event
					error:
					+ blockchain.ux.type.analytics.error
			fiat:
				currency:
				+ blockchain.db.collection
					deposit:
					+ blockchain.ux.type.story
					withdraw:
					+ blockchain.ux.type.story
		type:
			action:
			+ blockchain.ui.type.action
			analytics:
				action:
				+ blockchain.ux.type.analytics.event
				current:
					state:
					+ blockchain.db.type.tag
					+ blockchain.session.state.value
				error:
				+ blockchain.ux.type.analytics.event
					message:
				event:
					source:
						file:
						line:
				state:
				+ blockchain.ux.type.analytics.event
			story:
			+ blockchain.ux.type.analytics.state
				entry:
		user:
			KYC:
			+ blockchain.ux.type.story
			account:
			+ blockchain.ux.type.story
				airdrops:
				+ blockchain.ux.type.story
				connect:
					with:
						exchange:
						+ blockchain.ux.type.story
							connect:
				currency:
					native:
					+ blockchain.ux.type.story
						select:
					trading:
					+ blockchain.ux.type.story
						select:
				debit_card:
					order:
				help:
					contact:
						support:
						+ blockchain.ux.type.story
					policy:
						cookie:
						+ blockchain.ux.type.story
						privacy:
						+ blockchain.ux.type.story
					terms_and_conditions:
					+ blockchain.ux.type.story
				linked:
					accounts:
						add:
							new:
							+ blockchain.ux.type.story
				notification:
					email:
					push:
				profile:
					email:
					+ blockchain.ux.type.story
						change:
					limits:
					+ blockchain.ux.type.story
					mobile:
						number:
						+ blockchain.ux.type.story
							verify:
					wallet:
						id:
							copy:
				rate:
					the:
						app:
						+ blockchain.ux.type.story
				security:
					backup:
						phrase:
						+ blockchain.ux.type.story
							verify:
							+ blockchain.ux.type.story
							view:
							+ blockchain.ux.type.story
							warning:
							+ blockchain.ux.type.story
					biometric:
					change:
						password:
						+ blockchain.ux.type.story
						pin:
						+ blockchain.ux.type.story
					cloud:
						backup:
							enable:
					synchronize:
						widget:
					two_factor_authentication:
						add:
						remove:
				sign:
					out:
				web:
					login:
					+ blockchain.ux.type.story
			activity:
			+ blockchain.ux.type.story
			portfolio:
			+ blockchain.ux.type.story
			rewards:
			+ blockchain.ux.type.story
		web:
		+ blockchain.db.collection
		+ blockchain.ux.type.story